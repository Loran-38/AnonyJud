#!/usr/bin/env python3
"""
Test des fonctions PDF d'anonymisation et de d√©-anonymisation
"""

import logging
from app.anonymizer import create_pdf_from_text, anonymize_pdf_file, deanonymize_pdf_file

# Configuration du logging
logging.basicConfig(level=logging.INFO, format='%(levelname)s: %(message)s')

def test_create_pdf():
    """Test de cr√©ation d'un PDF simple"""
    print("=== Test cr√©ation PDF ===")
    
    text = """Ceci est un test de cr√©ation de PDF.

    Ce document contient plusieurs paragraphes pour tester la fonctionnalit√© de cr√©ation de PDF avec reportlab.
    
    Nous testons les caract√®res sp√©ciaux : & < > et les accents : √©√†√®√π√ß"""
    
    try:
        pdf_content = create_pdf_from_text(text, "Test PDF")
        print(f"‚úÖ PDF cr√©√© avec succ√®s - Taille: {len(pdf_content)} bytes")
        
        # Sauvegarder le PDF pour v√©rification
        with open("test_created.pdf", "wb") as f:
            f.write(pdf_content)
        print("‚úÖ PDF sauvegard√© dans test_created.pdf")
        
        return True
    except Exception as e:
        print(f"‚ùå Erreur lors de la cr√©ation PDF: {e}")
        return False

def test_anonymize_pdf():
    """Test d'anonymisation d'un PDF"""
    print("\n=== Test anonymisation PDF ===")
    
    # Cr√©er un PDF de test avec des donn√©es personnelles
    original_text = """Document de test

    Nom: Dupont Jean
    Pr√©nom: Jean
    Adresse: 123 Rue de la Paix, 75001 Paris
    T√©l√©phone: 01.23.45.67.89
    Email: jean.dupont@example.com
    
    Ce document contient des informations personnelles qui doivent √™tre anonymis√©es."""
    
    try:
        # Cr√©er le PDF original
        original_pdf = create_pdf_from_text(original_text, "Document Original")
        print(f"‚úÖ PDF original cr√©√© - Taille: {len(original_pdf)} bytes")
        
        # D√©finir les tiers
        tiers = [
            {
                "numero": 1,
                "nom": "Dupont",
                "prenom": "Jean",
                "adresse": "123 Rue de la Paix, 75001 Paris",
                "telephone": "01.23.45.67.89",
                "email": "jean.dupont@example.com"
            }
        ]
        
        # Anonymiser le PDF
        anonymized_pdf, mapping = anonymize_pdf_file(original_pdf, tiers)
        print(f"‚úÖ PDF anonymis√© - Taille: {len(anonymized_pdf)} bytes")
        print(f"‚úÖ Mapping g√©n√©r√©: {mapping}")
        
        # Sauvegarder le PDF anonymis√©
        with open("test_anonymized.pdf", "wb") as f:
            f.write(anonymized_pdf)
        print("‚úÖ PDF anonymis√© sauvegard√© dans test_anonymized.pdf")
        
        return anonymized_pdf, mapping
        
    except Exception as e:
        print(f"‚ùå Erreur lors de l'anonymisation PDF: {e}")
        return None, None

def test_deanonymize_pdf():
    """Test de d√©-anonymisation d'un PDF"""
    print("\n=== Test d√©-anonymisation PDF ===")
    
    # D'abord anonymiser un PDF
    anonymized_pdf, mapping = test_anonymize_pdf()
    
    if anonymized_pdf is None:
        print("‚ùå Impossible de tester la d√©-anonymisation sans PDF anonymis√©")
        return False
    
    try:
        # D√©-anonymiser le PDF
        deanonymized_pdf = deanonymize_pdf_file(anonymized_pdf, mapping)
        print(f"‚úÖ PDF d√©-anonymis√© - Taille: {len(deanonymized_pdf)} bytes")
        
        # Sauvegarder le PDF d√©-anonymis√©
        with open("test_deanonymized.pdf", "wb") as f:
            f.write(deanonymized_pdf)
        print("‚úÖ PDF d√©-anonymis√© sauvegard√© dans test_deanonymized.pdf")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Erreur lors de la d√©-anonymisation PDF: {e}")
        return False

if __name__ == "__main__":
    print("üß™ Tests des fonctions PDF\n")
    
    # Test 1: Cr√©ation PDF
    success1 = test_create_pdf()
    
    # Test 2: Anonymisation PDF
    success2 = test_anonymize_pdf() != (None, None)
    
    # Test 3: D√©-anonymisation PDF
    success3 = test_deanonymize_pdf()
    
    print(f"\n=== R√©sultats des tests ===")
    print(f"Cr√©ation PDF: {'‚úÖ' if success1 else '‚ùå'}")
    print(f"Anonymisation PDF: {'‚úÖ' if success2 else '‚ùå'}")
    print(f"D√©-anonymisation PDF: {'‚úÖ' if success3 else '‚ùå'}")
    
    if success1 and success2 and success3:
        print("\nüéâ Tous les tests PDF sont r√©ussis !")
    else:
        print("\n‚ö†Ô∏è Certains tests ont √©chou√©") 